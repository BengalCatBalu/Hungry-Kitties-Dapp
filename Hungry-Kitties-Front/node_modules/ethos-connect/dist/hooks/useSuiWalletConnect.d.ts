import type { SuiAddress, SuiTransactionResponse, SignableTransaction } from "@mysten/sui.js";
import { WalletAdapter } from "@mysten/wallet-adapter-base";
import { Preapproval } from "types/Preapproval";
import { SignAndExecuteTransactionOptions } from 'types/Signer';
export interface WalletContextState {
    wallets: WalletAdapter[];
    wallet: WalletAdapter | null;
    connecting: boolean;
    connected: boolean;
    noConnection: boolean;
    select(walletName: string): void;
    disconnect(): Promise<void>;
    getAccounts: () => Promise<SuiAddress[]>;
    signAndExecuteTransaction(transaction: SignableTransaction, options?: SignAndExecuteTransactionOptions): Promise<SuiTransactionResponse>;
}
declare const useSuiWalletConnect: () => {
    wallets: WalletAdapter[];
    wallet: WalletAdapter | null;
    connecting: boolean;
    noConnection: boolean;
    connected: boolean;
    select: (name: string) => Promise<boolean>;
    getAccounts: () => Promise<string[]>;
    getAddress: () => Promise<string>;
    signAndExecuteTransaction: (transaction: any, options: any) => Promise<{
        effects: {
            status: {
                status: "success" | "failure";
                error?: string | undefined;
            };
            transactionDigest: string;
            gasUsed: {
                storageRebate: number;
                computationCost: number;
                storageCost: number;
            };
            gasObject: {
                owner: "Immutable" | {
                    AddressOwner: string;
                } | {
                    ObjectOwner: string;
                } | {
                    Shared: {
                        initial_shared_version: number;
                    };
                };
                reference: {
                    digest: string;
                    objectId: string;
                    version: number;
                };
            };
            executedEpoch?: number | undefined;
            sharedObjects?: {
                digest: string;
                objectId: string;
                version: number;
            }[] | undefined;
            created?: {
                owner: "Immutable" | {
                    AddressOwner: string;
                } | {
                    ObjectOwner: string;
                } | {
                    Shared: {
                        initial_shared_version: number;
                    };
                };
                reference: {
                    digest: string;
                    objectId: string;
                    version: number;
                };
            }[] | undefined;
            mutated?: {
                owner: "Immutable" | {
                    AddressOwner: string;
                } | {
                    ObjectOwner: string;
                } | {
                    Shared: {
                        initial_shared_version: number;
                    };
                };
                reference: {
                    digest: string;
                    objectId: string;
                    version: number;
                };
            }[] | undefined;
            unwrapped?: {
                owner: "Immutable" | {
                    AddressOwner: string;
                } | {
                    ObjectOwner: string;
                } | {
                    Shared: {
                        initial_shared_version: number;
                    };
                };
                reference: {
                    digest: string;
                    objectId: string;
                    version: number;
                };
            }[] | undefined;
            deleted?: {
                digest: string;
                objectId: string;
                version: number;
            }[] | undefined;
            unwrapped_then_deleted?: {
                digest: string;
                objectId: string;
                version: number;
            }[] | undefined;
            wrapped?: {
                digest: string;
                objectId: string;
                version: number;
            }[] | undefined;
            events?: ({
                moveEvent: {
                    type: string;
                    fields: Record<string, any>;
                    sender: string;
                    packageId: string;
                    transactionModule: string;
                    bcs: string;
                };
            } | {
                publish: {
                    sender: string;
                    packageId: string;
                    digest?: string | undefined;
                    version?: number | undefined;
                };
            } | {
                coinBalanceChange: {
                    version: number;
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    amount: number;
                    sender: string;
                    packageId: string;
                    transactionModule: string;
                    changeType: "Pay" | "Gas" | "Receive";
                    coinType: string;
                    coinObjectId: string;
                };
            } | {
                transferObject: {
                    objectId: string;
                    version: number;
                    recipient: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    sender: string;
                    packageId: string;
                    transactionModule: string;
                    objectType: string;
                };
            } | {
                mutateObject: {
                    objectId: string;
                    version: number;
                    sender: string;
                    packageId: string;
                    transactionModule: string;
                    objectType: string;
                };
            } | {
                deleteObject: {
                    objectId: string;
                    version: number;
                    sender: string;
                    packageId: string;
                    transactionModule: string;
                };
            } | {
                newObject: {
                    objectId: string;
                    version: number;
                    recipient: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    sender: string;
                    packageId: string;
                    transactionModule: string;
                    objectType: string;
                };
            } | {
                epochChange: number | bigint;
            } | {
                checkpoint: number | bigint;
            })[] | undefined;
            dependencies?: string[] | undefined;
        };
        checkpoint?: number | null | undefined;
        transaction?: {
            data: {
                sender: string;
                gasData: {
                    payment: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                    owner: string;
                    price: number;
                    budget: number;
                };
                transactions: ({
                    TransferObject: {
                        recipient: string;
                        objectRef: {
                            digest: string;
                            objectId: string;
                            version: number;
                        };
                    };
                } | {
                    Publish: {
                        disassembled: Record<string, string>;
                    };
                } | {
                    Call: {
                        function: string;
                        package: string;
                        module: string;
                        typeArguments?: string[] | undefined;
                        arguments?: unknown[] | undefined;
                    };
                } | {
                    TransferSui: {
                        recipient: string;
                        amount: number | null;
                    };
                } | {
                    ChangeEpoch: {
                        epoch: number;
                        storage_charge: number;
                        computation_charge: number;
                        storage_rebate?: number | undefined;
                        epoch_start_timestamp_ms?: number | undefined;
                    };
                } | {
                    ConsensusCommitPrologue: {
                        checkpoint_start_timestamp_ms: number;
                    };
                } | {
                    Pay: {
                        coins: {
                            digest: string;
                            objectId: string;
                            version: number;
                        }[];
                        recipients: string[];
                        amounts: number[];
                    };
                } | {
                    PaySui: {
                        coins: {
                            digest: string;
                            objectId: string;
                            version: number;
                        }[];
                        recipients: string[];
                        amounts: number[];
                    };
                } | {
                    PayAllSui: {
                        recipient: string;
                        coins: {
                            digest: string;
                            objectId: string;
                            version: number;
                        }[];
                    };
                } | {
                    Genesis: {
                        objects: string[];
                    };
                })[];
            };
            txSignatures: string[];
        } | undefined;
        certificate?: {
            data: {
                sender: string;
                gasData: {
                    payment: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                    owner: string;
                    price: number;
                    budget: number;
                };
                transactions: ({
                    TransferObject: {
                        recipient: string;
                        objectRef: {
                            digest: string;
                            objectId: string;
                            version: number;
                        };
                    };
                } | {
                    Publish: {
                        disassembled: Record<string, string>;
                    };
                } | {
                    Call: {
                        function: string;
                        package: string;
                        module: string;
                        typeArguments?: string[] | undefined;
                        arguments?: unknown[] | undefined;
                    };
                } | {
                    TransferSui: {
                        recipient: string;
                        amount: number | null;
                    };
                } | {
                    ChangeEpoch: {
                        epoch: number;
                        storage_charge: number;
                        computation_charge: number;
                        storage_rebate?: number | undefined;
                        epoch_start_timestamp_ms?: number | undefined;
                    };
                } | {
                    ConsensusCommitPrologue: {
                        checkpoint_start_timestamp_ms: number;
                    };
                } | {
                    Pay: {
                        coins: {
                            digest: string;
                            objectId: string;
                            version: number;
                        }[];
                        recipients: string[];
                        amounts: number[];
                    };
                } | {
                    PaySui: {
                        coins: {
                            digest: string;
                            objectId: string;
                            version: number;
                        }[];
                        recipients: string[];
                        amounts: number[];
                    };
                } | {
                    PayAllSui: {
                        recipient: string;
                        coins: {
                            digest: string;
                            objectId: string;
                            version: number;
                        }[];
                    };
                } | {
                    Genesis: {
                        objects: string[];
                    };
                })[];
            };
            txSignatures: string[];
            transactionDigest: string;
            authSignInfo: {
                signature: string | string[];
                epoch: number;
                signers_map: number[];
            };
        } | undefined;
        timestamp_ms?: number | null | undefined;
        timestampMs?: number | null | undefined;
        confirmedLocalExecution?: boolean | undefined;
        parsed_data?: {
            SplitCoin: {
                updatedCoin: {
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    previousTransaction: string;
                    data: {
                        type: string;
                        fields: Record<string, any>;
                        dataType: "moveObject";
                        has_public_transfer?: boolean | undefined;
                    } | {
                        disassembled: Record<string, string>;
                        dataType: "package";
                    };
                    storageRebate: number;
                    reference: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                };
                updatedGas: {
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    previousTransaction: string;
                    data: {
                        type: string;
                        fields: Record<string, any>;
                        dataType: "moveObject";
                        has_public_transfer?: boolean | undefined;
                    } | {
                        disassembled: Record<string, string>;
                        dataType: "package";
                    };
                    storageRebate: number;
                    reference: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                };
                newCoins: {
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    previousTransaction: string;
                    data: {
                        type: string;
                        fields: Record<string, any>;
                        dataType: "moveObject";
                        has_public_transfer?: boolean | undefined;
                    } | {
                        disassembled: Record<string, string>;
                        dataType: "package";
                    };
                    storageRebate: number;
                    reference: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                }[];
            };
        } | {
            MergeCoin: {
                updatedCoin: {
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    previousTransaction: string;
                    data: {
                        type: string;
                        fields: Record<string, any>;
                        dataType: "moveObject";
                        has_public_transfer?: boolean | undefined;
                    } | {
                        disassembled: Record<string, string>;
                        dataType: "package";
                    };
                    storageRebate: number;
                    reference: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                };
                updatedGas: {
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    previousTransaction: string;
                    data: {
                        type: string;
                        fields: Record<string, any>;
                        dataType: "moveObject";
                        has_public_transfer?: boolean | undefined;
                    } | {
                        disassembled: Record<string, string>;
                        dataType: "package";
                    };
                    storageRebate: number;
                    reference: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                };
            };
        } | {
            Publish: {
                package: {
                    digest: string;
                    objectId: string;
                    version: number;
                };
                updatedGas: {
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    previousTransaction: string;
                    data: {
                        type: string;
                        fields: Record<string, any>;
                        dataType: "moveObject";
                        has_public_transfer?: boolean | undefined;
                    } | {
                        disassembled: Record<string, string>;
                        dataType: "package";
                    };
                    storageRebate: number;
                    reference: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                };
                createdObjects: {
                    owner: "Immutable" | {
                        AddressOwner: string;
                    } | {
                        ObjectOwner: string;
                    } | {
                        Shared: {
                            initial_shared_version: number;
                        };
                    };
                    previousTransaction: string;
                    data: {
                        type: string;
                        fields: Record<string, any>;
                        dataType: "moveObject";
                        has_public_transfer?: boolean | undefined;
                    } | {
                        disassembled: Record<string, string>;
                        dataType: "package";
                    };
                    storageRebate: number;
                    reference: {
                        digest: string;
                        objectId: string;
                        version: number;
                    };
                }[];
            };
        } | null | undefined;
    }>;
    requestPreapproval: (preapproval: Preapproval) => Promise<any>;
    sign: ({ message }: any) => Promise<any>;
    disconnect: () => void;
};
export default useSuiWalletConnect;
