import{useCallback as p,useEffect as o,useRef as v,useState as w}from"react";import l from"../lib/log.js";import y from"./useWalletKit.js";import{Connection as P,JsonRpcProvider as K}from"@mysten/sui.js";import D from"../lib/lib.js";import{DEFAULT_CHAIN as E,DEFAULT_NETWORK as N}from"../lib/constants.js";import{WalletKitCoreConnectionStatus as T}from"@mysten/wallet-kit-core";const W=(n,a)=>{const t=v(!1),i=v({ethos:!1,extension:!1}),[d,S]=w({provider:null,signer:null}),{wallets:A,status:u,signer:g,getState:c,connect:b}=y({defaultChain:n?.chain??E,preferredWallets:n?.preferredWallets,disableAutoConnect:n?.disableAutoConnect}),m=p(()=>{t.current=!1,i.current={ethos:!1,extension:!1},S(e=>({...e,signer:null}))},[]);o(()=>{t.current=!1,i.current={ethos:!1,extension:!1}},[n]),o(()=>{const{provider:e,signer:r}=d;if(!e&&!r)return;const f=c();f.isConnecting||f.isError||a&&a(d)},[u,d,a,c]);const s=p((e,r)=>{if(l("useConnect","trying to set providerAndSigner",r,t.current,i.current),t.current)return;r&&(i.current[r]=!0);const f=!Object.values(i.current).includes(!1);if(!e&&!f)return;t.current=!!e;const h=typeof n?.network=="string"?n.network:N,x=new P({fullnode:h}),C=new K(x);if(e){const k=e?.disconnect;e.disconnect=()=>{k(),m()}}S({provider:C,signer:e})},[m]);return o(()=>{u===T.DISCONNECTED&&(i.current.extension=!1,t.current=!1,S(e=>({...e,signer:null})))},[u]),o(()=>{!n||l("mobile","listening to mobile connection from EthosConnectProvider")},[s,n]),o(()=>{if(!n)return;const e=c();l("useConnect","Setting providerAndSigner extension",e),!(e.isConnecting||e.isError)&&s(g,"extension")},[u,c,s,g,n]),o(()=>{if(!n)return;if(!n.apiKey){l("useConnect","Setting null providerAndSigner ethos"),s(null,"ethos");return}(async()=>{const r=await D.getEthosSigner({defaultChain:n.chain??E});l("useConnect","Setting providerAndSigner ethos",r),s(r,"ethos")})()},[s,n]),{wallets:A,providerAndSigner:d,connect:b,getState:c}};var G=W;export{G as default};
